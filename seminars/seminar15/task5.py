import argparse
import logging
import os
from collections import namedtuple

logging.basicConfig(level=logging.INFO, filename="loger.log", filemode="w",
                    format='%(levelname)s, %(asctime)s, %(message)s')

'''
üìå–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∏–∑ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –ø—É—Ç—å –¥–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–∞ –ü–ö.
üìå–°–æ–±–µ—Ä–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º –≤ –≤–∏–¥–µ –æ–±—ä–µ–∫—Ç–æ–≤ namedtuple.
üìå–ö–∞–∂–¥—ã–π –æ–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏—Ç:
‚óã –∏–º—è —Ñ–∞–π–ª–∞ –±–µ–∑ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–∞–ª–æ–≥–∞,
‚óã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –µ—Å–ª–∏ —ç—Ç–æ —Ñ–∞–π–ª,
‚óã —Ñ–ª–∞–≥ –∫–∞—Ç–∞–ª–æ–≥–∞,
‚óã –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞.
üìå–í –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–±–æ—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏—Å–ø–æ–ª—å–∑—É—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
'''

def file_listening(path='.'):

    for dirpath, dir_name, file_name in os.walk(path):
        Files = namedtuple('Files', ['item_name', 'file_ext', 'dir_flag', 'parent_path'])
        parent_path = dirpath.split('/')[-2]

        if dir_name:
            dir_flag = 'Is a direcory.'
            exp_dict = Files(dir_name, None, dir_flag, parent_path)
            logging.info(f'{exp_dict}')

        if file_name:
            dir_flag = 'Is a file.'
            for f in file_name:
                exp_dict = Files(f.split('.')[0], f.split('.')[-1], dir_flag, parent_path)
                logging.info(f'{exp_dict}')


if __name__ == '__main__':
    path = '/home/amingaleev/SpecializationPython/DivePython/homeworke/hw7'

    parser = argparse.ArgumentParser(description='–°–∫–∞–Ω–µ—Ä —Ñ–∞–π–ª–æ–≤.')
    parser.add_argument('-path', type=str, help='–í–≤–µ–¥–∏—Ç–µ –ø—É—Ç—å: ', default=path)
    args = parser.parse_args()
    print(args)
    print(file_listening(args.path))
